/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SubscriptionInvitesApi.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_CLIENT_SubscriptionInvitesApi_H_
#define FASTREPORT_CLOUD_CLIENT_SubscriptionInvitesApi_H_

#include "CloudKludge.h"
#include "../ApiClient.h"

#include "CreateSubscriptionInviteVM.h"
#include "ProblemDetails.h"
#include "SubscriptionInvitesVM.h"
#include "SubscriptionVM.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace fastreport {
namespace cloud {
namespace client {

using namespace fastreport::cloud::models;



class  SubscriptionInvitesApi 
{
public:

    explicit SubscriptionInvitesApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~SubscriptionInvitesApi();

    /// <summary>
    /// Add a user to the subscription using invite,  the added users will be displayed in the list of users of the subscription,  and these users will also have an active subscription.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="subscriptionId">Idenitifier of subscription</param>
    /// <param name="accessToken">access token of the subscription</param>
    pplx::task<void> subscriptionInvitesAcceptInvite(
        utility::string_t subscriptionId,
        utility::string_t accessToken
    ) const;
    /// <summary>
    /// Create invite to subscription
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="subscriptionId">id</param>
    /// <param name="createInviteVM">create VM (optional)</param>
    pplx::task<std::shared_ptr<SubscriptionVM>> subscriptionInvitesCreateInvite(
        utility::string_t subscriptionId,
        boost::optional<std::shared_ptr<CreateSubscriptionInviteVM>> createInviteVM
    ) const;
    /// <summary>
    /// Rename subscription
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="subscriptionId">id</param>
    /// <param name="accesstoken">invite&#39;s token</param>
    pplx::task<void> subscriptionInvitesDeleteInvite(
        utility::string_t subscriptionId,
        utility::string_t accesstoken
    ) const;
    /// <summary>
    /// Get list of invites in a subscription,  the added users will be displayed in the list of users of the subscription,  and these users will also have an active subscription.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="subscriptionId">Idenitifier of subscription</param>
    pplx::task<std::shared_ptr<SubscriptionInvitesVM>> subscriptionInvitesGetInvites(
        utility::string_t subscriptionId
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}

#endif /* FASTREPORT_CLOUD_CLIENT_SubscriptionInvitesApi_H_ */

