/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdminApiKeysApi.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_CLIENT_AdminApiKeysApi_H_
#define FASTREPORT_CLOUD_CLIENT_AdminApiKeysApi_H_

#include "CloudKludge.h"
#include "../ApiClient.h"

#include "ApiKeyVM.h"
#include "ApiKeysVM.h"
#include "CreateApiKeyVM.h"
#include "DeleteApiKeyVM.h"
#include "ProblemDetails.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace fastreport {
namespace cloud {
namespace client {

using namespace fastreport::cloud::models;



class  AdminApiKeysApi 
{
public:

    explicit AdminApiKeysApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~AdminApiKeysApi();

    /// <summary>
    /// Create a new apikey, 5 apikeys for user. Hardcoded for ddos.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="userId"></param>
    /// <param name="model"> (optional)</param>
    pplx::task<std::shared_ptr<ApiKeyVM>> adminApiKeysCreateApiKey(
        utility::string_t userId,
        boost::optional<std::shared_ptr<CreateApiKeyVM>> model
    ) const;
    /// <summary>
    /// Delete an apikey
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="userId"></param>
    /// <param name="model"> (optional)</param>
    pplx::task<void> adminApiKeysDeleteApiKey(
        utility::string_t userId,
        boost::optional<std::shared_ptr<DeleteApiKeyVM>> model
    ) const;
    /// <summary>
    /// Returns list with all api keys of a specified user
    /// </summary>
    /// <remarks>
    /// Always work, it should make only 200 response.
    /// </remarks>
    /// <param name="userId"></param>
    pplx::task<std::shared_ptr<ApiKeysVM>> adminApiKeysGetApiKeys(
        utility::string_t userId
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}

#endif /* FASTREPORT_CLOUD_CLIENT_AdminApiKeysApi_H_ */

