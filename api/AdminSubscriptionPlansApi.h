/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdminSubscriptionPlansApi.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_CLIENT_AdminSubscriptionPlansApi_H_
#define FASTREPORT_CLOUD_CLIENT_AdminSubscriptionPlansApi_H_

#include "CloudKludge.h"
#include "../ApiClient.h"

#include "CreateSubscriptionPlanVM.h"
#include "ProblemDetails.h"
#include "SubscriptionPlanVM.h"
#include "SubscriptionPlansVM.h"
#include "UpdateSubscriptionPlanVM.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace fastreport {
namespace cloud {
namespace client {

using namespace fastreport::cloud::models;



class  AdminSubscriptionPlansApi 
{
public:

    explicit AdminSubscriptionPlansApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~AdminSubscriptionPlansApi();

    /// <summary>
    /// Create a new subscription plan, returns a new model
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="viewModel"> (optional)</param>
    pplx::task<std::shared_ptr<SubscriptionPlanVM>> adminSubscriptionPlansCreateSubscriptionPlan(
        boost::optional<std::shared_ptr<CreateSubscriptionPlanVM>> viewModel
    ) const;
    /// <summary>
    /// Delete a subscription plan.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="id">Identifier of subsctiption plan</param>
    pplx::task<void> adminSubscriptionPlansDeleteSubscriptionPlan(
        utility::string_t id
    ) const;
    /// <summary>
    /// Returns a subscription plan. Not all subscriptions can be issued for customer.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="id">Identifier of subsctiption plan</param>
    pplx::task<std::shared_ptr<SubscriptionPlanVM>> adminSubscriptionPlansGetSubscriptionPlan(
        utility::string_t id
    ) const;
    /// <summary>
    /// Returns a list of active subscription plans that can be issued to the user.
    /// </summary>
    /// <remarks>
    /// If no active subscription plans, then the endpoint will return empty list
    /// </remarks>
    /// <param name="skip">Variable for pagination, defautl value is 0 (optional, default to 0)</param>
    /// <param name="take">Variable for pagination, default value is 10 (optional, default to 0)</param>
    pplx::task<std::shared_ptr<SubscriptionPlansVM>> adminSubscriptionPlansGetSubscriptionPlans(
        boost::optional<int32_t> skip,
        boost::optional<int32_t> take
    ) const;
    /// <summary>
    /// Update a subscription plan.
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="id">Identifier of subsctiption plan</param>
    /// <param name="viewModel">Update VM (optional)</param>
    pplx::task<std::shared_ptr<SubscriptionPlanVM>> adminSubscriptionPlansUpdateSubscriptionPlan(
        utility::string_t id,
        boost::optional<std::shared_ptr<UpdateSubscriptionPlanVM>> viewModel
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}

#endif /* FASTREPORT_CLOUD_CLIENT_AdminSubscriptionPlansApi_H_ */

