/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "CppRestOpenAPIClient/model/AuditType.h"

namespace fastreport {
namespace cloud {
namespace models {


namespace
{
using EnumUnderlyingType = utility::string_t;

AuditType::eAuditType toEnum(const EnumUnderlyingType& val)
{
    if (val == utility::conversions::to_string_t(U("Task_Created_ExportTemplate")))
        return AuditType::eAuditType::AuditType_TASK_CREATED_EXPORTTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Created_ExportReport")))
        return AuditType::eAuditType::AuditType_TASK_CREATED_EXPORTREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Created_PrepareTemplate")))
        return AuditType::eAuditType::AuditType_TASK_CREATED_PREPARETEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Created_Fetch")))
        return AuditType::eAuditType::AuditType_TASK_CREATED_FETCH;
    if (val == utility::conversions::to_string_t(U("Task_Created_Email")))
        return AuditType::eAuditType::AuditType_TASK_CREATED_EMAIL;
    if (val == utility::conversions::to_string_t(U("Task_Created_Webhook")))
        return AuditType::eAuditType::AuditType_TASK_CREATED_WEBHOOK;
    if (val == utility::conversions::to_string_t(U("Task_Deleted_ExportTemplate")))
        return AuditType::eAuditType::AuditType_TASK_DELETED_EXPORTTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Deleted_ExportReport")))
        return AuditType::eAuditType::AuditType_TASK_DELETED_EXPORTREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Deleted_PrepareTemplate")))
        return AuditType::eAuditType::AuditType_TASK_DELETED_PREPARETEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Deleted_Fetch")))
        return AuditType::eAuditType::AuditType_TASK_DELETED_FETCH;
    if (val == utility::conversions::to_string_t(U("Task_Deleted_Email")))
        return AuditType::eAuditType::AuditType_TASK_DELETED_EMAIL;
    if (val == utility::conversions::to_string_t(U("Task_Deleted_Webhook")))
        return AuditType::eAuditType::AuditType_TASK_DELETED_WEBHOOK;
    if (val == utility::conversions::to_string_t(U("Task_Updated_ExportTemplate")))
        return AuditType::eAuditType::AuditType_TASK_UPDATED_EXPORTTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Updated_ExportReport")))
        return AuditType::eAuditType::AuditType_TASK_UPDATED_EXPORTREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Updated_PrepareTemplate")))
        return AuditType::eAuditType::AuditType_TASK_UPDATED_PREPARETEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Updated_Fetch")))
        return AuditType::eAuditType::AuditType_TASK_UPDATED_FETCH;
    if (val == utility::conversions::to_string_t(U("Task_Updated_Email")))
        return AuditType::eAuditType::AuditType_TASK_UPDATED_EMAIL;
    if (val == utility::conversions::to_string_t(U("Task_Updated_Webhook")))
        return AuditType::eAuditType::AuditType_TASK_UPDATED_WEBHOOK;
    if (val == utility::conversions::to_string_t(U("Task_InQueue_ExportTemplate")))
        return AuditType::eAuditType::AuditType_TASK_INQUEUE_EXPORTTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_InQueue_ExportReport")))
        return AuditType::eAuditType::AuditType_TASK_INQUEUE_EXPORTREPORT;
    if (val == utility::conversions::to_string_t(U("Task_InQueue_PrepareTemplate")))
        return AuditType::eAuditType::AuditType_TASK_INQUEUE_PREPARETEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_InQueue_Fetch")))
        return AuditType::eAuditType::AuditType_TASK_INQUEUE_FETCH;
    if (val == utility::conversions::to_string_t(U("Task_InQueue_Email")))
        return AuditType::eAuditType::AuditType_TASK_INQUEUE_EMAIL;
    if (val == utility::conversions::to_string_t(U("Task_InQueue_Webhook")))
        return AuditType::eAuditType::AuditType_TASK_INQUEUE_WEBHOOK;
    if (val == utility::conversions::to_string_t(U("Task_InProcess_ExportTemplate")))
        return AuditType::eAuditType::AuditType_TASK_INPROCESS_EXPORTTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_InProcess_ExportReport")))
        return AuditType::eAuditType::AuditType_TASK_INPROCESS_EXPORTREPORT;
    if (val == utility::conversions::to_string_t(U("Task_InProcess_PrepareTemplate")))
        return AuditType::eAuditType::AuditType_TASK_INPROCESS_PREPARETEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_InProcess_Fetch")))
        return AuditType::eAuditType::AuditType_TASK_INPROCESS_FETCH;
    if (val == utility::conversions::to_string_t(U("Task_InProcess_Email")))
        return AuditType::eAuditType::AuditType_TASK_INPROCESS_EMAIL;
    if (val == utility::conversions::to_string_t(U("Task_InProcess_Webhook")))
        return AuditType::eAuditType::AuditType_TASK_INPROCESS_WEBHOOK;
    if (val == utility::conversions::to_string_t(U("Task_Success_ExportTemplate")))
        return AuditType::eAuditType::AuditType_TASK_SUCCESS_EXPORTTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Success_ExportReport")))
        return AuditType::eAuditType::AuditType_TASK_SUCCESS_EXPORTREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Success_PrepareTemplate")))
        return AuditType::eAuditType::AuditType_TASK_SUCCESS_PREPARETEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Success_Fetch")))
        return AuditType::eAuditType::AuditType_TASK_SUCCESS_FETCH;
    if (val == utility::conversions::to_string_t(U("Task_Success_Email")))
        return AuditType::eAuditType::AuditType_TASK_SUCCESS_EMAIL;
    if (val == utility::conversions::to_string_t(U("Task_Success_Webhook")))
        return AuditType::eAuditType::AuditType_TASK_SUCCESS_WEBHOOK;
    if (val == utility::conversions::to_string_t(U("Task_Failed_ExportTemplate")))
        return AuditType::eAuditType::AuditType_TASK_FAILED_EXPORTTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Failed_ExportReport")))
        return AuditType::eAuditType::AuditType_TASK_FAILED_EXPORTREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Failed_PrepareTemplate")))
        return AuditType::eAuditType::AuditType_TASK_FAILED_PREPARETEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Failed_Fetch")))
        return AuditType::eAuditType::AuditType_TASK_FAILED_FETCH;
    if (val == utility::conversions::to_string_t(U("Task_Failed_Email")))
        return AuditType::eAuditType::AuditType_TASK_FAILED_EMAIL;
    if (val == utility::conversions::to_string_t(U("Task_Failed_Webhook")))
        return AuditType::eAuditType::AuditType_TASK_FAILED_WEBHOOK;
    if (val == utility::conversions::to_string_t(U("Task_Created_ThumbnailReport")))
        return AuditType::eAuditType::AuditType_TASK_CREATED_THUMBNAILREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Deleted_ThumbnailReport")))
        return AuditType::eAuditType::AuditType_TASK_DELETED_THUMBNAILREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Updated_ThumbnailReport")))
        return AuditType::eAuditType::AuditType_TASK_UPDATED_THUMBNAILREPORT;
    if (val == utility::conversions::to_string_t(U("Task_InQueue_ThumbnailReport")))
        return AuditType::eAuditType::AuditType_TASK_INQUEUE_THUMBNAILREPORT;
    if (val == utility::conversions::to_string_t(U("Task_InProcess_ThumbnailReport")))
        return AuditType::eAuditType::AuditType_TASK_INPROCESS_THUMBNAILREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Success_ThumbnailReport")))
        return AuditType::eAuditType::AuditType_TASK_SUCCESS_THUMBNAILREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Fail_ThumbnailReport")))
        return AuditType::eAuditType::AuditType_TASK_FAIL_THUMBNAILREPORT;
    if (val == utility::conversions::to_string_t(U("Task_Created_ThumbnailTemplate")))
        return AuditType::eAuditType::AuditType_TASK_CREATED_THUMBNAILTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Deleted_ThumbnailTemplate")))
        return AuditType::eAuditType::AuditType_TASK_DELETED_THUMBNAILTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Updated_ThumbnailTemplate")))
        return AuditType::eAuditType::AuditType_TASK_UPDATED_THUMBNAILTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_InQueue_ThumbnailTemplate")))
        return AuditType::eAuditType::AuditType_TASK_INQUEUE_THUMBNAILTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_InProcess_ThumbnailTemplate")))
        return AuditType::eAuditType::AuditType_TASK_INPROCESS_THUMBNAILTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Success_ThumbnailTemplate")))
        return AuditType::eAuditType::AuditType_TASK_SUCCESS_THUMBNAILTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Task_Fail_ThumbnailTemplate")))
        return AuditType::eAuditType::AuditType_TASK_FAIL_THUMBNAILTEMPLATE;
    if (val == utility::conversions::to_string_t(U("Subscription_Renewed")))
        return AuditType::eAuditType::AuditType_SUBSCRIPTION_RENEWED;
    if (val == utility::conversions::to_string_t(U("Subscription_Created")))
        return AuditType::eAuditType::AuditType_SUBSCRIPTION_CREATED;
    if (val == utility::conversions::to_string_t(U("File_Renamed")))
        return AuditType::eAuditType::AuditType_FILE_RENAMED;
    if (val == utility::conversions::to_string_t(U("File_Content_Updated")))
        return AuditType::eAuditType::AuditType_FILE_CONTENT_UPDATED;
    if (val == utility::conversions::to_string_t(U("File_Deleted")))
        return AuditType::eAuditType::AuditType_FILE_DELETED;
    if (val == utility::conversions::to_string_t(U("File_Moved")))
        return AuditType::eAuditType::AuditType_FILE_MOVED;
    if (val == utility::conversions::to_string_t(U("File_Copied")))
        return AuditType::eAuditType::AuditType_FILE_COPIED;
    if (val == utility::conversions::to_string_t(U("File_Tags_Updated")))
        return AuditType::eAuditType::AuditType_FILE_TAGS_UPDATED;
    if (val == utility::conversions::to_string_t(U("File_Permissions_Updated")))
        return AuditType::eAuditType::AuditType_FILE_PERMISSIONS_UPDATED;
    if (val == utility::conversions::to_string_t(U("File_Restored")))
        return AuditType::eAuditType::AuditType_FILE_RESTORED;
    if (val == utility::conversions::to_string_t(U("File_MovedToBin")))
        return AuditType::eAuditType::AuditType_FILE_MOVEDTOBIN;
    if (val == utility::conversions::to_string_t(U("File_Updated")))
        return AuditType::eAuditType::AuditType_FILE_UPDATED;
    if (val == utility::conversions::to_string_t(U("Task_Created_FTPUpload")))
        return AuditType::eAuditType::AuditType_TASK_CREATED_FTPUPLOAD;
    if (val == utility::conversions::to_string_t(U("Task_Deleted_FTPUpload")))
        return AuditType::eAuditType::AuditType_TASK_DELETED_FTPUPLOAD;
    if (val == utility::conversions::to_string_t(U("Task_Updated_FTPUpload")))
        return AuditType::eAuditType::AuditType_TASK_UPDATED_FTPUPLOAD;
    if (val == utility::conversions::to_string_t(U("Task_InQueue_FTPUpload")))
        return AuditType::eAuditType::AuditType_TASK_INQUEUE_FTPUPLOAD;
    if (val == utility::conversions::to_string_t(U("Task_InProcess_FTPUpload")))
        return AuditType::eAuditType::AuditType_TASK_INPROCESS_FTPUPLOAD;
    if (val == utility::conversions::to_string_t(U("Task_Success_FTPUpload")))
        return AuditType::eAuditType::AuditType_TASK_SUCCESS_FTPUPLOAD;
    if (val == utility::conversions::to_string_t(U("Task_Fail_FTPUpload")))
        return AuditType::eAuditType::AuditType_TASK_FAIL_FTPUPLOAD;
    if (val == utility::conversions::to_string_t(U("File_Created")))
        return AuditType::eAuditType::AuditType_FILE_CREATED;
    return {};
}

EnumUnderlyingType fromEnum(AuditType::eAuditType e)
{
    switch (e)
    {
    case AuditType::eAuditType::AuditType_TASK_CREATED_EXPORTTEMPLATE:
        return U("Task_Created_ExportTemplate");
    case AuditType::eAuditType::AuditType_TASK_CREATED_EXPORTREPORT:
        return U("Task_Created_ExportReport");
    case AuditType::eAuditType::AuditType_TASK_CREATED_PREPARETEMPLATE:
        return U("Task_Created_PrepareTemplate");
    case AuditType::eAuditType::AuditType_TASK_CREATED_FETCH:
        return U("Task_Created_Fetch");
    case AuditType::eAuditType::AuditType_TASK_CREATED_EMAIL:
        return U("Task_Created_Email");
    case AuditType::eAuditType::AuditType_TASK_CREATED_WEBHOOK:
        return U("Task_Created_Webhook");
    case AuditType::eAuditType::AuditType_TASK_DELETED_EXPORTTEMPLATE:
        return U("Task_Deleted_ExportTemplate");
    case AuditType::eAuditType::AuditType_TASK_DELETED_EXPORTREPORT:
        return U("Task_Deleted_ExportReport");
    case AuditType::eAuditType::AuditType_TASK_DELETED_PREPARETEMPLATE:
        return U("Task_Deleted_PrepareTemplate");
    case AuditType::eAuditType::AuditType_TASK_DELETED_FETCH:
        return U("Task_Deleted_Fetch");
    case AuditType::eAuditType::AuditType_TASK_DELETED_EMAIL:
        return U("Task_Deleted_Email");
    case AuditType::eAuditType::AuditType_TASK_DELETED_WEBHOOK:
        return U("Task_Deleted_Webhook");
    case AuditType::eAuditType::AuditType_TASK_UPDATED_EXPORTTEMPLATE:
        return U("Task_Updated_ExportTemplate");
    case AuditType::eAuditType::AuditType_TASK_UPDATED_EXPORTREPORT:
        return U("Task_Updated_ExportReport");
    case AuditType::eAuditType::AuditType_TASK_UPDATED_PREPARETEMPLATE:
        return U("Task_Updated_PrepareTemplate");
    case AuditType::eAuditType::AuditType_TASK_UPDATED_FETCH:
        return U("Task_Updated_Fetch");
    case AuditType::eAuditType::AuditType_TASK_UPDATED_EMAIL:
        return U("Task_Updated_Email");
    case AuditType::eAuditType::AuditType_TASK_UPDATED_WEBHOOK:
        return U("Task_Updated_Webhook");
    case AuditType::eAuditType::AuditType_TASK_INQUEUE_EXPORTTEMPLATE:
        return U("Task_InQueue_ExportTemplate");
    case AuditType::eAuditType::AuditType_TASK_INQUEUE_EXPORTREPORT:
        return U("Task_InQueue_ExportReport");
    case AuditType::eAuditType::AuditType_TASK_INQUEUE_PREPARETEMPLATE:
        return U("Task_InQueue_PrepareTemplate");
    case AuditType::eAuditType::AuditType_TASK_INQUEUE_FETCH:
        return U("Task_InQueue_Fetch");
    case AuditType::eAuditType::AuditType_TASK_INQUEUE_EMAIL:
        return U("Task_InQueue_Email");
    case AuditType::eAuditType::AuditType_TASK_INQUEUE_WEBHOOK:
        return U("Task_InQueue_Webhook");
    case AuditType::eAuditType::AuditType_TASK_INPROCESS_EXPORTTEMPLATE:
        return U("Task_InProcess_ExportTemplate");
    case AuditType::eAuditType::AuditType_TASK_INPROCESS_EXPORTREPORT:
        return U("Task_InProcess_ExportReport");
    case AuditType::eAuditType::AuditType_TASK_INPROCESS_PREPARETEMPLATE:
        return U("Task_InProcess_PrepareTemplate");
    case AuditType::eAuditType::AuditType_TASK_INPROCESS_FETCH:
        return U("Task_InProcess_Fetch");
    case AuditType::eAuditType::AuditType_TASK_INPROCESS_EMAIL:
        return U("Task_InProcess_Email");
    case AuditType::eAuditType::AuditType_TASK_INPROCESS_WEBHOOK:
        return U("Task_InProcess_Webhook");
    case AuditType::eAuditType::AuditType_TASK_SUCCESS_EXPORTTEMPLATE:
        return U("Task_Success_ExportTemplate");
    case AuditType::eAuditType::AuditType_TASK_SUCCESS_EXPORTREPORT:
        return U("Task_Success_ExportReport");
    case AuditType::eAuditType::AuditType_TASK_SUCCESS_PREPARETEMPLATE:
        return U("Task_Success_PrepareTemplate");
    case AuditType::eAuditType::AuditType_TASK_SUCCESS_FETCH:
        return U("Task_Success_Fetch");
    case AuditType::eAuditType::AuditType_TASK_SUCCESS_EMAIL:
        return U("Task_Success_Email");
    case AuditType::eAuditType::AuditType_TASK_SUCCESS_WEBHOOK:
        return U("Task_Success_Webhook");
    case AuditType::eAuditType::AuditType_TASK_FAILED_EXPORTTEMPLATE:
        return U("Task_Failed_ExportTemplate");
    case AuditType::eAuditType::AuditType_TASK_FAILED_EXPORTREPORT:
        return U("Task_Failed_ExportReport");
    case AuditType::eAuditType::AuditType_TASK_FAILED_PREPARETEMPLATE:
        return U("Task_Failed_PrepareTemplate");
    case AuditType::eAuditType::AuditType_TASK_FAILED_FETCH:
        return U("Task_Failed_Fetch");
    case AuditType::eAuditType::AuditType_TASK_FAILED_EMAIL:
        return U("Task_Failed_Email");
    case AuditType::eAuditType::AuditType_TASK_FAILED_WEBHOOK:
        return U("Task_Failed_Webhook");
    case AuditType::eAuditType::AuditType_TASK_CREATED_THUMBNAILREPORT:
        return U("Task_Created_ThumbnailReport");
    case AuditType::eAuditType::AuditType_TASK_DELETED_THUMBNAILREPORT:
        return U("Task_Deleted_ThumbnailReport");
    case AuditType::eAuditType::AuditType_TASK_UPDATED_THUMBNAILREPORT:
        return U("Task_Updated_ThumbnailReport");
    case AuditType::eAuditType::AuditType_TASK_INQUEUE_THUMBNAILREPORT:
        return U("Task_InQueue_ThumbnailReport");
    case AuditType::eAuditType::AuditType_TASK_INPROCESS_THUMBNAILREPORT:
        return U("Task_InProcess_ThumbnailReport");
    case AuditType::eAuditType::AuditType_TASK_SUCCESS_THUMBNAILREPORT:
        return U("Task_Success_ThumbnailReport");
    case AuditType::eAuditType::AuditType_TASK_FAIL_THUMBNAILREPORT:
        return U("Task_Fail_ThumbnailReport");
    case AuditType::eAuditType::AuditType_TASK_CREATED_THUMBNAILTEMPLATE:
        return U("Task_Created_ThumbnailTemplate");
    case AuditType::eAuditType::AuditType_TASK_DELETED_THUMBNAILTEMPLATE:
        return U("Task_Deleted_ThumbnailTemplate");
    case AuditType::eAuditType::AuditType_TASK_UPDATED_THUMBNAILTEMPLATE:
        return U("Task_Updated_ThumbnailTemplate");
    case AuditType::eAuditType::AuditType_TASK_INQUEUE_THUMBNAILTEMPLATE:
        return U("Task_InQueue_ThumbnailTemplate");
    case AuditType::eAuditType::AuditType_TASK_INPROCESS_THUMBNAILTEMPLATE:
        return U("Task_InProcess_ThumbnailTemplate");
    case AuditType::eAuditType::AuditType_TASK_SUCCESS_THUMBNAILTEMPLATE:
        return U("Task_Success_ThumbnailTemplate");
    case AuditType::eAuditType::AuditType_TASK_FAIL_THUMBNAILTEMPLATE:
        return U("Task_Fail_ThumbnailTemplate");
    case AuditType::eAuditType::AuditType_SUBSCRIPTION_RENEWED:
        return U("Subscription_Renewed");
    case AuditType::eAuditType::AuditType_SUBSCRIPTION_CREATED:
        return U("Subscription_Created");
    case AuditType::eAuditType::AuditType_FILE_RENAMED:
        return U("File_Renamed");
    case AuditType::eAuditType::AuditType_FILE_CONTENT_UPDATED:
        return U("File_Content_Updated");
    case AuditType::eAuditType::AuditType_FILE_DELETED:
        return U("File_Deleted");
    case AuditType::eAuditType::AuditType_FILE_MOVED:
        return U("File_Moved");
    case AuditType::eAuditType::AuditType_FILE_COPIED:
        return U("File_Copied");
    case AuditType::eAuditType::AuditType_FILE_TAGS_UPDATED:
        return U("File_Tags_Updated");
    case AuditType::eAuditType::AuditType_FILE_PERMISSIONS_UPDATED:
        return U("File_Permissions_Updated");
    case AuditType::eAuditType::AuditType_FILE_RESTORED:
        return U("File_Restored");
    case AuditType::eAuditType::AuditType_FILE_MOVEDTOBIN:
        return U("File_MovedToBin");
    case AuditType::eAuditType::AuditType_FILE_UPDATED:
        return U("File_Updated");
    case AuditType::eAuditType::AuditType_TASK_CREATED_FTPUPLOAD:
        return U("Task_Created_FTPUpload");
    case AuditType::eAuditType::AuditType_TASK_DELETED_FTPUPLOAD:
        return U("Task_Deleted_FTPUpload");
    case AuditType::eAuditType::AuditType_TASK_UPDATED_FTPUPLOAD:
        return U("Task_Updated_FTPUpload");
    case AuditType::eAuditType::AuditType_TASK_INQUEUE_FTPUPLOAD:
        return U("Task_InQueue_FTPUpload");
    case AuditType::eAuditType::AuditType_TASK_INPROCESS_FTPUPLOAD:
        return U("Task_InProcess_FTPUpload");
    case AuditType::eAuditType::AuditType_TASK_SUCCESS_FTPUPLOAD:
        return U("Task_Success_FTPUpload");
    case AuditType::eAuditType::AuditType_TASK_FAIL_FTPUPLOAD:
        return U("Task_Fail_FTPUpload");
    case AuditType::eAuditType::AuditType_FILE_CREATED:
        return U("File_Created");
    default:
        break;
    }
    return {};
}
}

AuditType::AuditType()
{
}

AuditType::~AuditType()
{
}

void AuditType::validate()
{
    // TODO: implement validation
}

web::json::value AuditType::toJson() const
{
    auto val = fromEnum(m_value);
    return web::json::value(val);
}

bool AuditType::fromJson(const web::json::value& val)
{
    m_value = toEnum(val.as_string());
    return true;
}

void AuditType::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if (!namePrefix.empty() && namePrefix.back() != U('.'))
    {
        namePrefix.push_back(U('.'));
    }

    auto e = fromEnum(m_value);
    multipart->add(ModelBase::toHttpContent(namePrefix, e));
}

bool AuditType::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if (!namePrefix.empty() && namePrefix.back() != U('.'))
    {
        namePrefix.push_back(U('.'));
    }
    {
        EnumUnderlyingType e;
        ok = ModelBase::fromHttpContent(multipart->getContent(namePrefix), e);
        if (ok)
        {
            auto v = toEnum(e);
            setValue(v);
        }
    }
    return ok;
}

AuditType::eAuditType AuditType::getValue() const
{
   return m_value;
}

void AuditType::setValue(AuditType::eAuditType const value)
{
   m_value = value;
}


}
}
}


