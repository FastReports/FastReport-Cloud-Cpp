/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UserProfileApi.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_CLIENT_UserProfileApi_H_
#define FASTREPORT_CLOUD_CLIENT_UserProfileApi_H_

#include "CloudKludge.h"

#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/ProblemDetails.h"
#include "CppRestOpenAPIClient/model/UpdateUserProfileVM.h"
#include "CppRestOpenAPIClient/model/UserProfileVM.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace fastreport {
namespace cloud {
namespace client {

using namespace fastreport::cloud::models;



class  UserProfileApi 
{
public:

    explicit UserProfileApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~UserProfileApi();

    /// <summary>
    /// Return current profile of the current user
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    pplx::task<std::shared_ptr<UserProfileVM>> userProfileGetMyProfile(
    ) const;
    /// <summary>
    /// Return user profile by user identifier.  If the user did not provide information about himself or blocked, then the endpoint will return an empty model. (only id)
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="userId"></param>
    pplx::task<std::shared_ptr<UserProfileVM>> userProfileGetUserProfile(
        utility::string_t userId
    ) const;
    /// <summary>
    /// Update profile of the current user
    /// </summary>
    /// <remarks>
    /// This method is only allowed for local sign in via intranet
    /// </remarks>
    /// <param name="updateUserProfileVM"> (optional)</param>
    pplx::task<void> userProfileUpdateMyProfile(
        boost::optional<std::shared_ptr<UpdateUserProfileVM>> updateUserProfileVM
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}

#endif /* FASTREPORT_CLOUD_CLIENT_UserProfileApi_H_ */

