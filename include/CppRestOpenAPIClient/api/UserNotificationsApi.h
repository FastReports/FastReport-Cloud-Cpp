/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UserNotificationsApi.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_CLIENT_UserNotificationsApi_H_
#define FASTREPORT_CLOUD_CLIENT_UserNotificationsApi_H_

#include "CloudKludge.h"

#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/AuditActionsVM.h"
#include "CppRestOpenAPIClient/model/ClearNotificationsVM.h"
#include "CppRestOpenAPIClient/model/ProblemDetails.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace fastreport {
namespace cloud {
namespace client {

using namespace fastreport::cloud::models;



class  UserNotificationsApi 
{
public:

    explicit UserNotificationsApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~UserNotificationsApi();

    /// <summary>
    /// Use this endpoint to \&quot;clear\&quot; your notifications
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="clearNotificationsVM"> (optional)</param>
    pplx::task<void> userNotificationsClearNotifications(
        boost::optional<std::shared_ptr<ClearNotificationsVM>> clearNotificationsVM
    ) const;
    /// <summary>
    /// Use this endpoint to recieve notifications
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="skip"> (optional, default to 0)</param>
    /// <param name="take"> (optional, default to 0)</param>
    /// <param name="subscriptionId"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<AuditActionsVM>> userNotificationsGetNotifications(
        boost::optional<int32_t> skip,
        boost::optional<int32_t> take,
        boost::optional<utility::string_t> subscriptionId
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}

#endif /* FASTREPORT_CLOUD_CLIENT_UserNotificationsApi_H_ */

