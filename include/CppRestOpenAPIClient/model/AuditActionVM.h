/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AuditActionVM.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_AuditActionVM_H_
#define FASTREPORT_CLOUD_MODELS_AuditActionVM_H_

#include "CloudKludge.h"
#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/AuditType.h"

namespace fastreport {
namespace cloud {
namespace models {


/// <summary>
/// 
/// </summary>
class  AuditActionVM
    : public ModelBase
{
public:
    AuditActionVM();
    virtual ~AuditActionVM();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AuditActionVM members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUserId() const;
    bool userIdIsSet() const;
    void unsetuserId();

    void setUserId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEntityId() const;
    bool entityIdIsSet() const;
    void unsetentityId();

    void setEntityId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSubscriptionId() const;
    bool subscriptionIdIsSet() const;
    void unsetsubscriptionId();

    void setSubscriptionId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AuditType> getType() const;
    bool typeIsSet() const;
    void unsettype();

    void setType(const std::shared_ptr<AuditType>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetid();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCreatedTime() const;
    bool createdTimeIsSet() const;
    void unsetcreatedTime();

    void setCreatedTime(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCreatorUserId() const;
    bool creatorUserIdIsSet() const;
    void unsetcreatorUserId();

    void setCreatorUserId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetname();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isAdminAction() const;
    bool adminActionIsSet() const;
    void unsetadminAction();

    void setAdminAction(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getT() const;
    bool TIsSet() const;
    void unsett();

    void setT(const utility::string_t& value);


protected:
    utility::string_t m_userId;
    bool m_userIdIsSet;
    utility::string_t m_entityId;
    bool m_entityIdIsSet;
    utility::string_t m_subscriptionId;
    bool m_subscriptionIdIsSet;
    std::shared_ptr<AuditType> m_type;
    bool m_typeIsSet;
    utility::string_t m_id;
    bool m_idIsSet;
    utility::datetime m_createdTime;
    bool m_createdTimeIsSet;
    utility::string_t m_creatorUserId;
    bool m_creatorUserIdIsSet;
    utility::string_t m_name;
    bool m_nameIsSet;
    bool m_adminAction;
    bool m_adminActionIsSet;
    utility::string_t m_t;
    bool m_tIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_AuditActionVM_H_ */
