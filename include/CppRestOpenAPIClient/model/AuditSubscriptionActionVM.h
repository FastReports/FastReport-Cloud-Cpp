/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AuditSubscriptionActionVM.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_AuditSubscriptionActionVM_H_
#define FASTREPORT_CLOUD_MODELS_AuditSubscriptionActionVM_H_

#include "CloudKludge.h"
#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/AuditType.h"
#include "CppRestOpenAPIClient/model/AuditActionVM.h"

namespace fastreport {
namespace cloud {
namespace models {


/// <summary>
/// 
/// </summary>
class  AuditSubscriptionActionVM
    : public ModelBase
{
public:
    AuditSubscriptionActionVM();
    virtual ~AuditSubscriptionActionVM();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AuditSubscriptionActionVM members

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getPeriodStart() const;
    bool periodStartIsSet() const;
    void unsetperiodStart();

    void setPeriodStart(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getPeriodEnd() const;
    bool periodEndIsSet() const;
    void unsetperiodEnd();

    void setPeriodEnd(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPlanId() const;
    bool planIdIsSet() const;
    void unsetplanId();

    void setPlanId(const utility::string_t& value);


protected:
    utility::datetime m_periodStart;
    bool m_periodStartIsSet;
    utility::datetime m_periodEnd;
    bool m_periodEndIsSet;
    utility::string_t m_planId;
    bool m_planIdIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_AuditSubscriptionActionVM_H_ */
