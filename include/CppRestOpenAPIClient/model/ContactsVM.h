/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ContactsVM.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_ContactsVM_H_
#define FASTREPORT_CLOUD_MODELS_ContactsVM_H_

#include "CloudKludge.h"
#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/ContactVM.h"
#include <vector>

namespace fastreport {
namespace cloud {
namespace models {

class ContactVM;

/// <summary>
/// 
/// </summary>
class  ContactsVM
    : public ModelBase
{
public:
    ContactsVM();
    virtual ~ContactsVM();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ContactsVM members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ContactVM>>& getContacts();
    bool contactsIsSet() const;
    void unsetcontacts();

    void setContacts(const std::vector<std::shared_ptr<ContactVM>>& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getSkip() const;
    bool skipIsSet() const;
    void unsetskip();

    void setSkip(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getTake() const;
    bool takeIsSet() const;
    void unsettake();

    void setTake(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getCount() const;
    bool countIsSet() const;
    void unsetcount();

    void setCount(int64_t value);


protected:
    std::vector<std::shared_ptr<ContactVM>> m_contacts;
    bool m_contactsIsSet;
    int32_t m_skip;
    bool m_skipIsSet;
    int32_t m_take;
    bool m_takeIsSet;
    int64_t m_count;
    bool m_countIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_ContactsVM_H_ */
