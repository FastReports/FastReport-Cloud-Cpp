/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions_H_
#define FASTREPORT_CLOUD_MODELS_FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions_H_

#include "CloudKludge.h"
#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/FilePermission.h"
#include <map>

namespace fastreport {
namespace cloud {
namespace models {

class FilePermission;

/// <summary>
/// 
/// </summary>
class  FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions
    : public ModelBase
{
public:
    FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions();
    virtual ~FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getOwnerId() const;
    bool ownerIdIsSet() const;
    void unsetownerId();

    void setOwnerId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<FilePermission> getOwner() const;
    bool ownerIsSet() const;
    void unsetowner();

    void setOwner(const std::shared_ptr<FilePermission>& value);

    /// <summary>
    /// 
    /// </summary>
    std::map<utility::string_t, std::shared_ptr<FilePermission>>& getGroups();
    bool groupsIsSet() const;
    void unsetgroups();

    void setGroups(const std::map<utility::string_t, std::shared_ptr<FilePermission>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<FilePermission> getOther() const;
    bool otherIsSet() const;
    void unsetother();

    void setOther(const std::shared_ptr<FilePermission>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<FilePermission> getAnon() const;
    bool anonIsSet() const;
    void unsetanon();

    void setAnon(const std::shared_ptr<FilePermission>& value);


protected:
    utility::string_t m_ownerId;
    bool m_ownerIdIsSet;
    std::shared_ptr<FilePermission> m_owner;
    bool m_ownerIsSet;
    std::map<utility::string_t, std::shared_ptr<FilePermission>> m_groups;
    bool m_groupsIsSet;
    std::shared_ptr<FilePermission> m_other;
    bool m_otherIsSet;
    std::shared_ptr<FilePermission> m_anon;
    bool m_anonIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_FilePermissionFileCreateFileGetFileUpdateFileDeleteFileExecuteFileAdministratePermissions_H_ */
