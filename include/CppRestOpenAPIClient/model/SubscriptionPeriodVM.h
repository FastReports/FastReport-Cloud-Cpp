/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SubscriptionPeriodVM.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_SubscriptionPeriodVM_H_
#define FASTREPORT_CLOUD_MODELS_SubscriptionPeriodVM_H_

#include "CloudKludge.h"
#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/SubscriptionPlanVM.h"
#include <cpprest/details/basic_types.h>

namespace fastreport {
namespace cloud {
namespace models {

class SubscriptionPlanVM;

/// <summary>
/// 
/// </summary>
class  SubscriptionPeriodVM
    : public ModelBase
{
public:
    SubscriptionPeriodVM();
    virtual ~SubscriptionPeriodVM();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SubscriptionPeriodVM members

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getStartTime() const;
    bool startTimeIsSet() const;
    void unsetstartTime();

    void setStartTime(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getEndTime() const;
    bool endTimeIsSet() const;
    void unsetendTime();

    void setEndTime(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SubscriptionPlanVM> getPlan() const;
    bool planIsSet() const;
    void unsetplan();

    void setPlan(const std::shared_ptr<SubscriptionPlanVM>& value);


protected:
    utility::datetime m_startTime;
    bool m_startTimeIsSet;
    utility::datetime m_endTime;
    bool m_endTimeIsSet;
    std::shared_ptr<SubscriptionPlanVM> m_plan;
    bool m_planIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_SubscriptionPeriodVM_H_ */
