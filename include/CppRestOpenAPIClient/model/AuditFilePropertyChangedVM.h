/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AuditFilePropertyChangedVM.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_AuditFilePropertyChangedVM_H_
#define FASTREPORT_CLOUD_MODELS_AuditFilePropertyChangedVM_H_

#include "CloudKludge.h"
#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/EntityType.h"
#include "CppRestOpenAPIClient/model/AnyType.h"
#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/AuditType.h"
#include "CppRestOpenAPIClient/model/AuditActionVM.h"

namespace fastreport {
namespace cloud {
namespace models {


/// <summary>
/// 
/// </summary>
class  AuditFilePropertyChangedVM
    : public ModelBase
{
public:
    AuditFilePropertyChangedVM();
    virtual ~AuditFilePropertyChangedVM();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AuditFilePropertyChangedVM members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPropertyName() const;
    bool propertyNameIsSet() const;
    void unsetpropertyName();

    void setPropertyName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AnyType> getOldValue() const;
    bool oldValueIsSet() const;
    void unsetoldValue();

    void setOldValue(const std::shared_ptr<AnyType>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AnyType> getNewValue() const;
    bool newValueIsSet() const;
    void unsetnewValue();

    void setNewValue(const std::shared_ptr<AnyType>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<EntityType> getEntityType() const;
    bool entityTypeIsSet() const;
    void unsetentityType();

    void setEntityType(const std::shared_ptr<EntityType>& value);


protected:
    utility::string_t m_propertyName;
    bool m_propertyNameIsSet;
    std::shared_ptr<AnyType> m_oldValue;
    bool m_oldValueIsSet;
    std::shared_ptr<AnyType> m_newValue;
    bool m_newValueIsSet;
    std::shared_ptr<EntityType> m_entityType;
    bool m_entityTypeIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_AuditFilePropertyChangedVM_H_ */
