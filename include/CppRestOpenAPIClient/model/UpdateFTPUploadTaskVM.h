/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UpdateFTPUploadTaskVM.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_UpdateFTPUploadTaskVM_H_
#define FASTREPORT_CLOUD_MODELS_UpdateFTPUploadTaskVM_H_


#include "CppRestOpenAPIClient/model/UpdateTransportTaskBaseVM.h"
#include "CppRestOpenAPIClient/model/InputFileVM.h"
#include "CppRestOpenAPIClient/model/CreateTaskEndVM.h"
#include <cpprest/details/basic_types.h>

namespace fastreport {
namespace cloud {
namespace models {

class InputFileVM;
class CreateTaskEndVM;

/// <summary>
/// 
/// </summary>
class  UpdateFTPUploadTaskVM
    : public UpdateTransportTaskBaseVM
{
public:
    UpdateFTPUploadTaskVM();
    virtual ~UpdateFTPUploadTaskVM();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UpdateFTPUploadTaskVM members

    /// <summary>
    /// 
    /// </summary>
    bool isArchive() const;
    bool archiveIsSet() const;
    void unsetarchive();

    void setArchive(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getArchiveName() const;
    bool archiveNameIsSet() const;
    void unsetarchiveName();

    void setArchiveName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDestinationFolder() const;
    bool destinationFolderIsSet() const;
    void unsetdestinationFolder();

    void setDestinationFolder(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFtpHost() const;
    bool ftpHostIsSet() const;
    void unsetftpHost();

    void setFtpHost(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFtpPassword() const;
    bool ftpPasswordIsSet() const;
    void unsetftpPassword();

    void setFtpPassword(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getFtpPort() const;
    bool ftpPortIsSet() const;
    void unsetftpPort();

    void setFtpPort(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFtpUsername() const;
    bool ftpUsernameIsSet() const;
    void unsetftpUsername();

    void setFtpUsername(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isUseSFTP() const;
    bool useSFTPIsSet() const;
    void unsetuseSFTP();

    void setUseSFTP(bool value);


protected:
    bool m_archive;
    bool m_archiveIsSet;
    utility::string_t m_archiveName;
    bool m_archiveNameIsSet;
    utility::string_t m_destinationFolder;
    bool m_destinationFolderIsSet;
    utility::string_t m_ftpHost;
    bool m_ftpHostIsSet;
    utility::string_t m_ftpPassword;
    bool m_ftpPasswordIsSet;
    int32_t m_ftpPort;
    bool m_ftpPortIsSet;
    utility::string_t m_ftpUsername;
    bool m_ftpUsernameIsSet;
    bool m_useSFTP;
    bool m_useSFTPIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_UpdateFTPUploadTaskVM_H_ */
