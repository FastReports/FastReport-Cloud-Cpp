/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.3.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AdminUpdateCurrentSubscriptionPlanVM.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_AdminUpdateCurrentSubscriptionPlanVM_H_
#define FASTREPORT_CLOUD_MODELS_AdminUpdateCurrentSubscriptionPlanVM_H_


#include "CppRestOpenAPIClient/model/UpdateSubscriptionPlanVM.h"
#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/model/CloudBaseVM.h"

namespace fastreport {
namespace cloud {
namespace models {

class UpdateSubscriptionPlanVM;

/// <summary>
/// 
/// </summary>
class  AdminUpdateCurrentSubscriptionPlanVM
    : public CloudBaseVM
{
public:
    AdminUpdateCurrentSubscriptionPlanVM();
    virtual ~AdminUpdateCurrentSubscriptionPlanVM();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AdminUpdateCurrentSubscriptionPlanVM members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<UpdateSubscriptionPlanVM> getPlan() const;
    bool planIsSet() const;
    void unsetplan();

    void setPlan(const std::shared_ptr<UpdateSubscriptionPlanVM>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getStart() const;
    bool startIsSet() const;
    void unsetstart();

    void setStart(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getEnd() const;
    bool endIsSet() const;
    void unsetend();

    void setEnd(const utility::datetime& value);


protected:
    std::shared_ptr<UpdateSubscriptionPlanVM> m_plan;
    bool m_planIsSet;
    utility::datetime m_start;
    bool m_startIsSet;
    utility::datetime m_end;
    bool m_endIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_AdminUpdateCurrentSubscriptionPlanVM_H_ */
