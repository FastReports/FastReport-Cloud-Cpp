/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SubscriptionVM.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_SubscriptionVM_H_
#define FASTREPORT_CLOUD_MODELS_SubscriptionVM_H_

#include "CloudKludge.h"
#include "../ModelBase.h"

#include "SubscriptionPeriodVM.h"
#include <cpprest/details/basic_types.h>
#include "SubscriptionFolder.h"
#include <vector>

namespace fastreport {
namespace cloud {
namespace models {


/// <summary>
/// 
/// </summary>
class  SubscriptionVM
    : public ModelBase
{
public:
    SubscriptionVM();
    virtual ~SubscriptionVM();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SubscriptionVM members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetid();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetname();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLocale() const;
    bool localeIsSet() const;
    void unsetlocale();

    void setLocale(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SubscriptionPeriodVM> getCurrent() const;
    bool currentIsSet() const;
    void unsetcurrent();

    void setCurrent(const std::shared_ptr<SubscriptionPeriodVM>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<SubscriptionPeriodVM>>& getOld();
    bool oldIsSet() const;
    void unsetold();

    void setOld(const std::vector<std::shared_ptr<SubscriptionPeriodVM>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SubscriptionFolder> getTemplatesFolder() const;
    bool templatesFolderIsSet() const;
    void unsettemplatesFolder();

    void setTemplatesFolder(const std::shared_ptr<SubscriptionFolder>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SubscriptionFolder> getReportsFolder() const;
    bool reportsFolderIsSet() const;
    void unsetreportsFolder();

    void setReportsFolder(const std::shared_ptr<SubscriptionFolder>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SubscriptionFolder> getExportsFolder() const;
    bool exportsFolderIsSet() const;
    void unsetexportsFolder();

    void setExportsFolder(const std::shared_ptr<SubscriptionFolder>& value);


protected:
    utility::string_t m_id;
    bool m_idIsSet;
    utility::string_t m_name;
    bool m_nameIsSet;
    utility::string_t m_locale;
    bool m_localeIsSet;
    std::shared_ptr<SubscriptionPeriodVM> m_current;
    bool m_currentIsSet;
    std::vector<std::shared_ptr<SubscriptionPeriodVM>> m_old;
    bool m_oldIsSet;
    std::shared_ptr<SubscriptionFolder> m_templatesFolder;
    bool m_templatesFolderIsSet;
    std::shared_ptr<SubscriptionFolder> m_reportsFolder;
    bool m_reportsFolderIsSet;
    std::shared_ptr<SubscriptionFolder> m_exportsFolder;
    bool m_exportsFolderIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_SubscriptionVM_H_ */
