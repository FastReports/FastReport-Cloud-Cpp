/**
 * FastReport Cloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DataSourceVM.h
 *
 * 
 */

#ifndef FASTREPORT_CLOUD_MODELS_DataSourceVM_H_
#define FASTREPORT_CLOUD_MODELS_DataSourceVM_H_

#include "CloudKludge.h"
#include "../ModelBase.h"

#include "DataSourceStatus.h"
#include <cpprest/details/basic_types.h>
#include "DataSourceConnectionType.h"

namespace fastreport {
namespace cloud {
namespace models {


/// <summary>
/// 
/// </summary>
class  DataSourceVM
    : public ModelBase
{
public:
    DataSourceVM();
    virtual ~DataSourceVM();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DataSourceVM members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetid();

    void setId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    bool nameIsSet() const;
    void unsetname();

    void setName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<DataSourceConnectionType> getConnectionType() const;
    bool connectionTypeIsSet() const;
    void unsetconnectionType();

    void setConnectionType(const std::shared_ptr<DataSourceConnectionType>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getConnectionString() const;
    bool connectionStringIsSet() const;
    void unsetconnectionString();

    void setConnectionString(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDataStructure() const;
    bool dataStructureIsSet() const;
    void unsetdataStructure();

    void setDataStructure(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSubscriptionId() const;
    bool subscriptionIdIsSet() const;
    void unsetsubscriptionId();

    void setSubscriptionId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getEditedTime() const;
    bool editedTimeIsSet() const;
    void unseteditedTime();

    void setEditedTime(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEditorUserId() const;
    bool editorUserIdIsSet() const;
    void unseteditorUserId();

    void setEditorUserId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getCreatedTime() const;
    bool createdTimeIsSet() const;
    void unsetcreatedTime();

    void setCreatedTime(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCreatorUserId() const;
    bool creatorUserIdIsSet() const;
    void unsetcreatorUserId();

    void setCreatorUserId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<DataSourceStatus> getStatus() const;
    bool statusIsSet() const;
    void unsetstatus();

    void setStatus(const std::shared_ptr<DataSourceStatus>& value);


protected:
    utility::string_t m_id;
    bool m_idIsSet;
    utility::string_t m_name;
    bool m_nameIsSet;
    std::shared_ptr<DataSourceConnectionType> m_connectionType;
    bool m_connectionTypeIsSet;
    utility::string_t m_connectionString;
    bool m_connectionStringIsSet;
    utility::string_t m_dataStructure;
    bool m_dataStructureIsSet;
    utility::string_t m_subscriptionId;
    bool m_subscriptionIdIsSet;
    utility::datetime m_editedTime;
    bool m_editedTimeIsSet;
    utility::string_t m_editorUserId;
    bool m_editorUserIdIsSet;
    utility::datetime m_createdTime;
    bool m_createdTimeIsSet;
    utility::string_t m_creatorUserId;
    bool m_creatorUserIdIsSet;
    std::shared_ptr<DataSourceStatus> m_status;
    bool m_statusIsSet;
};


}
}
}

#endif /* FASTREPORT_CLOUD_MODELS_DataSourceVM_H_ */
